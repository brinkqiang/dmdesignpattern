/********************************************************************
**       This head file is generated by program,                   **
**            Please do not change it directly.                    **
**                   Auther: brinkqiang                            **
********************************************************************/

/*       Version Number: 1_0          */

#ifndef MSGPERFORMANCE_H_INCLUDE_VERSION_1_0
#define MSGPERFORMANCE_H_INCLUDE_VERSION_1_0

#include <string.h>

#include "netdataex.h"

/*Inclues Begin*/
/*Inclues End*/

/*Defines Begin*/

#ifndef NSMSGPERFORMANCE_BEGIN
#define NSMSGPERFORMANCE_BEGIN
#endif

#ifndef NSMSGPERFORMANCE_NAMESPACE
#define NSMSGPERFORMANCE_NAMESPACE
#endif

#ifndef NSMSGPERFORMANCE_END
#define NSMSGPERFORMANCE_END
#endif

#define MAX_MSG_STRING              64
#define MAX_MSG_COUNT               10000

/*Defines End*/

NSMSGPERFORMANCE_BEGIN
/*Enums Begin*/

typedef enum
{
    eXMSGMax,
}EXMSG;

typedef enum
{
    eXMSGSMax,
}EXMSGS;


/*Enums End*/

/*Define Structs and Unions        Begin*/

struct tagXMSG : public CNetDataOpt<eXMSGMax>
{
    unsigned long long              qwMsgID;
    char                            szLastTime[MAX_MSG_STRING];
    unsigned long long              qwMaxConsumeTime;
    unsigned long long              qwAvgConsumeTime;
    unsigned long long              qwTotalConsumeTime;
    unsigned long long              qwMsgCount;
    unsigned long long              qwTotalMsgSize;
};

typedef tagXMSG XMSG;

struct tagXMSGS : public CNetDataOpt<eXMSGSMax>
{
    XMSG                            astMsg[MAX_MSG_COUNT];
};

typedef tagXMSGS XMSGS;

/*Define Structs and Unions        End*/

enum EN_MsgPerformance_MessageID
{
};

class CMsgPerformance;
typedef int (CMsgPerformance::*EnFuncCMsgPerformance)(void *pHost);
typedef int (CMsgPerformance::*DeFuncCMsgPerformance)(void *pHost);

class CMsgPerformance
{
public:
    CMsgPerformance();
    ~CMsgPerformance();
    int Encode(int nMsgID, void *pHost, char *pNet, int nNetSize);
    int Decode(int nMsgID, char *pNet,int nNetSize, void *pHost);
    EnFuncCMsgPerformance FindEncodeFunc(int nMsgID);
    DeFuncCMsgPerformance FindDecodeFunc(int nMsgID);
    int EncodeXMSG(void *pHost);
    int DecodeXMSG(void *pHost);
    int EncodeXMSGS(void *pHost);
    int DecodeXMSGS(void *pHost);
    bool Init();

private:
    EnFuncCMsgPerformance m_EncodeFuncArray[65535];
    DeFuncCMsgPerformance m_DecodeFuncArray[65535];
    CNetDataEx m_oData;
};

NSMSGPERFORMANCE_END
#endif
