cmake_minimum_required(VERSION 3.2)

PROJECT(dmsys)

LIST(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake)
INCLUDE(cmake/ModuleImport.cmake)
INCLUDE(cmake/ModuleCompileOptions.cmake)
ModuleSetCompileOptions()

SET(DMSYS_VERSION_MAJOR "1")
SET(DMSYS_VERSION_MINOR "0")
SET(DMSYS_VERSION_PATCH "1")
SET(DMSYS_VERSION "${DMSYS_VERSION_MAJOR}.${DMSYS_VERSION_MINOR}.${DMSYS_VERSION_PATCH}")

MESSAGE(STATUS "VERSION: ${DMSYS_VERSION}")

ADD_DEFINITIONS(-DUSE_DMSYS)

IF (WIN32)
    INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src/windows)
ENDIF(WIN32)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/test)

ADD_DEFINITIONS(-DUSE_DMSYS)

FILE(GLOB_RECURSE DMSYS_SOURCES
${CMAKE_CURRENT_SOURCE_DIR}/include/*.hpp
${CMAKE_CURRENT_SOURCE_DIR}/include/*.h

${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp
${CMAKE_CURRENT_SOURCE_DIR}/src/*.cc
${CMAKE_CURRENT_SOURCE_DIR}/src/*.c
${CMAKE_CURRENT_SOURCE_DIR}/src/*.hpp
${CMAKE_CURRENT_SOURCE_DIR}/src/*.h
)

IF (WIN32)
    LIST(APPEND DMSYS_SOURCES)
ENDIF(WIN32)

FILE(GLOB_RECURSE DMSYSTEST_SOURCES
${CMAKE_CURRENT_SOURCE_DIR}/test/*.cpp
${CMAKE_CURRENT_SOURCE_DIR}/test/*.cc
${CMAKE_CURRENT_SOURCE_DIR}/test/*.c
${CMAKE_CURRENT_SOURCE_DIR}/test/*.hpp
${CMAKE_CURRENT_SOURCE_DIR}/test/*.h)

ADD_LIBRARY(dmsys ${DMSYS_SOURCES})
ADD_EXECUTABLE(dmsystest ${DMSYSTEST_SOURCES})
TARGET_LINK_LIBRARIES(dmsystest dmsys)

#ADD_CUSTOM_COMMAND(
#TARGET dmsystest
#PRE_BUILD
#COMMAND ${CMAKE_COMMAND} -E copy_if_different
#${CMAKE_CURRENT_SOURCE_DIR}/config/test.csv
#$<TARGET_FILE_DIR:dmsystest>
#)

#INSTALL(DIRECTORY include/ DESTINATION include)
#INSTALL(TARGETS dmsys
#        RUNTIME DESTINATION bin
#        LIBRARY DESTINATION lib
#        ARCHIVE DESTINATION lib)

#SET(DMSYS_LIBS "dmsys")
#MARK_AS_ADVANCED(${DMSYS_LIBS})